{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/operations.js","redux/selectors.js","Components/ContactForm/Form.jsx","Components/ContactList/ContactList.jsx","redux/actions.js","Components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/reducers.js","redux/store.js","index.js","Components/ContactForm/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContact","createAsyncThunk","a","pending","get","resp","data","rejected","addContact","name","number","addedContact","post","deleteContact","contactId","delete","getAllItems","state","contacts","items","getFilter","filter","getLoading","loading","onFilteredContacts","createSelector","normalizedFilter","toLowerCase","trim","includes","ContactForm","onSubmit","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","nameId","uuidv4","numberId","preventDefault","map","contact","alert","_uuidv4","id","className","s","form","htmlFor","formLbl","type","onChange","pattern","title","required","inputLbl","btnInput","ContactList","isLoading","useEffect","contactLists","contactItem","contactName","contactNumber","onClick","btnDelete","filterContact","createAction","Filter","filterInputLabel","filteredInput","target","placeholder","App","contForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","fulfilled","_","action","payload","error","rootReducer","combineReducers","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98ccd8cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLists\":\"ContactList_contactLists__xThKO\",\"contactItem\":\"ContactList_contactItem__2CK7_\",\"contactName\":\"ContactList_contactName__288Xi\",\"btnDelete\":\"ContactList_btnDelete__3SJ33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filteredInputLabel\":\"Filter_filteredInputLabel__2FwWL\",\"filteredInput\":\"Filter_filteredInput__qbf7j\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://61bb6f1fe943920017784ea8.mockapi.io/api/v1/\";\n\nexport const fetchContact = createAsyncThunk(\n  \"contact/fetchContact\",\n  async () => {\n    fetchContact.pending();\n    try {\n      const resp = await axios.get(\"/contacts\");\n      return resp.data;\n    } catch (error) {\n      return fetchContact.rejected(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contact/addContact\",\n  async ({ name, number }) => {\n    const addedContact = {\n      name,\n      number,\n    };\n\n    const resp = await axios.post(\"/contacts\", addedContact);\n    return resp.data;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contact/deleteContact\",\n  async (contactId) => {\n    await axios.delete(`/contacts/${contactId}`);\n    return contactId;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nexport const getAllItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.loading;\n\nexport const onFilteredContacts = createSelector(\n  [getAllItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState } from \"react\";\r\nimport s from \"./Form.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { addContact } from \"../../redux/operations\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllItems } from \"../../redux/selectors\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contacts = useSelector(getAllItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.map((contact) => contact.name).includes(name)) {\r\n      alert(`${name} is already in contacs.`);\r\n      return;\r\n    }\r\n\r\n    const _uuidv4 = uuidv4();\r\n    const addNewContact = {\r\n      id: _uuidv4,\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    dispatch(addContact(addNewContact));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label htmlFor={nameId} className={s.formLbl}>\r\n        {\" \"}\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.inputLbl}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label htmlFor={numberId} className={s.formLbl}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={s.inputLbl}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" value=\"Отправить\" className={s.btnInput}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchContact, deleteContact } from \"../../redux/operations\";\r\nimport { getLoading, onFilteredContacts } from \"../../redux/selectors\";\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(onFilteredContacts);\r\n  const isLoading = useSelector(getLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !isLoading &&\r\n    contacts && (\r\n      <ul className={s.contactLists}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li key={id} className={s.contactItem}>\r\n            <p className={s.contactName}>\r\n              {name}: <span className={s.contactNumber}>{number}</span>\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => dispatch(deleteContact(id))}\r\n              className={s.btnDelete}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contact/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contact/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contact/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contact/addContactRequest\");\nexport const addContactSuccess = createAction(\"contact/addContactSuccess\");\nexport const addContactError = createAction(\"contact/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"deleteContact/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"deleteContact/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\n  \"deleteContact/deleteContactError\"\n);\n\nexport const filterContact = createAction(\"contacts/filterContact\");\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { filterContact } from \"../../redux/actions\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\n\r\nfunction Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.filterInputLabel}>Find contacts by name</label>\r\n      <br />\r\n      <input\r\n        className={s.filteredInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={(e) => dispatch(filterContact(e.target.value))}\r\n        placeholder=\"Contact\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import ContactForm from \"./Components/ContactForm/Form\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport s from \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className={s.contForm}>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n      </div>\n\n      <div>\n        <ContactList title=\"Contacts\"></ContactList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\n// import { addContact, deleteContact, filterContact } from \"./actions\";\nimport { filterContact } from \"./actions\";\nimport { fetchContact, addContact, deleteContact } from \"./operations\";\n\nconst items = createReducer([], {\n  [fetchContact.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, action) => [action.payload, ...state],\n  [deleteContact.fulfilled]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContact.pending]: () => true,\n  [fetchContact.fulfilled]: () => false,\n  [fetchContact.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {});\n\nconst rootReducer = combineReducers({\n  items,\n  isLoading,\n  filter,\n  error,\n});\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers\";\n\nconst store = configureStore({\n  reducer: { contacts: rootReducer },\n  devTools: true,\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={data.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2f7US\",\"formLbl\":\"Form_formLbl__3F0e4\",\"inputLbl\":\"Form_inputLbl__1y8_X\",\"btnInput\":\"Form_btnInput__3Vu-P\"};"],"sourceRoot":""}